% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{multiple_expect}
\alias{multiple_expect}
\title{Checks objects multiple times to see whether the produced effects are resilent}
\usage{
multiple_expect(x.call, n = 5, use.gctorture = FALSE)
}
\arguments{
\item{x.call}{a valid \R call.}

\item{n}{number of times.}

\item{use.gctorture}{\code{\link{gctorture}} calls \code{\link{gc}} after every
allocation.}
}
\description{
The output is called multiple times, and each time the output should be the same.
Especially do it for the calls running native code, best for detecting buffer
overflows, memory segfaults, and so on.
}
\details{
Although it's safer to check code with a memory management profiler like
\emph{Valgrind}, the \code{C} code can be called multiple times to check if any
garbage values are returned due to buffer overflow.

\code{\link{gctorture}} makes \R hundred times slower. Consider choosing sane
values for \code{n} when \code{use.gctorture} is \code{TRUE}.
}
\examples{
\dontrun{
## this silently passes!
multiple_expect(cat('hi'), n = 5)
## Below will give error when no seed is set.
multiple_expect(rnorm(5), n = 5, use.gctorture = FALSE)
}
}
